Version 0.0.7
 + serial console
 + working fork() system call

Version 0.0.6
 + 100% correct but non-functional implementation of fork() - gah
 + Kernel/usermode context switching
 + Fully protected usermode apps
 + Implemented open/close/read/write system calls
 + Implement and use semaphores to protect kernel data structures
 + Numerous other fixes

Version 0.0.5
 + Fix build on x86_64
 + Register/stack dump on all unhandled exceptions
 + Remove bogus save/restore of segment selectors in interrupt paths
 + Fix oops on schedule after exit()
 + Inode cache
 + Pagecache
 + Demand loading of ELF binaries from pagecache
 + Fix a number of inode refcounting bugs exposed by adding inode cache
 + Add option to poison all pages in buddy system

Version 0.0.4
 + Many fixes to scheduler
 + Don't allocate timeslices to idle task when there's work to do
 + Implement syscall layer and exit syscall
 + Fix EXT2 and namei()
 + Implement pread() for regular files
 + Overhaul build system, dep checks are now correct

Version 0.0.3
 + Memory initialisation cleanups
 + Protect critical regions from interrupts
 + Detect PCI devices
 + Low-overhead slab-style allocator
 + Block I/O subsystem
 + Start the VFS code
 + Start writing an EXT2 driver
 + Re-work exception handling

Version 0.0.2
 + Rewrote build system with dependancies
 + Restructured code
 + Gzip the kernel
 + Trimmed out all the old cruft
 + Add pageframe allocator (going to be a buddy allocator)
 + Add preemptive multi-tasking
 + Fix GDT code.
 + Kernel now loads at 0xc0000000 (3GB)
 + Add CPU Identification
 + Threaded floppy driver

Version 0.0.1
 + 8259A PIC support
 + 8254 PIT support
 + SMP detection
 + VGA text mode output
 + Monitor detection
 + Buffered PC/AT keyboard driver
 + DMA support (8 and 16 bit)
 + PC/AT Floppy disk driver, read only (w/dma)
 + Beginnings of an EXT2 fs driver
 + Started paging
 + Direct probed PCI support
